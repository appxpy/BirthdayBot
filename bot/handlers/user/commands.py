from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

from bot.controllers import user as u
from bot.markups import reply_markups
from bot.misc import bot


class AuthForm(StatesGroup):
    password = State()


async def menu(message: types.Message, state: FSMContext):
    await message.answer(
        "–ù–µ —É–¥–∞–ª—è–π —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –û–Ω–æ –Ω—É–∂–Ω–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é —Å–Ω–∏–∑—É.",
        reply_markup=reply_markups.menu(),
    )
    await bot.send_message(
        message.from_user.id,
        "–í–æ—Ç –Ω–µ–±–æ–ª—å—à–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n\n 1. –¢–µ–±–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è (–µ—Å–ª–∏ —Ç—ã –µ—â–µ —ç—Ç–æ–≥–æ –Ω–µ –¥–µ–ª–∞–ª). –î–ª—è —ç—Ç–æ–≥–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–æ–π <b>–î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è üéÇ</b>.\n\n2. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±—É–¥—É—â–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è - –∫–Ω–æ–ø–∫–∞ <b>–°–ø–∏—Å–æ–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π üìù</b>\n\n3. –¢—ã —É—Å—Ç–∞–ª –æ—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞ –∏ —Ö–æ—á–µ—à—å –≤—Å–µ–º —è–∑–≤–∏—Ç—å —á—Ç–æ –≤—Å–µ –∑–∞–±—ã–ª–∏ –ø—Ä–æ —Ç–≤–æ–π –¥—Ä? –ö–Ω–æ–ø–∫–∞ <b>–£–¥–∞–ª–∏—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è ‚ùå</b> –¥–ª—è —Ç–µ–±—è.\n\n–≤—Ä–æ–¥–µ –≤—Å–µ..",
    )


async def cmd_start(message: types.Message, state: FSMContext):
    user = await u.get_user(message.from_user.id)
    await state.finish()
    if not user:
        await bot.send_message(
            message.from_user.id,
            text=f"–ü—Ä–∏–≤–µ—Ç <b>{message.from_user.full_name}</b>!\n\n–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–Ω—è—Ö —Ä–æ–∂–¥–µ–Ω–∏—è —Ç–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π <span class='tg-spoiler'>(–Ω—É –∏–ª–∏ –ø–æ—á—Ç–∏)</span>.\n\n–ö–æ—Ä–æ—á–µ, —Ç–µ–±–µ —Å–µ–π—á–∞—Å –Ω–∞–¥–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç <b>–ø–∞—Ä–æ–ª—å</b>, —á—Ç–æ–±—ã —è –º–æ–≥ –ø–æ–Ω—è—Ç—å —á—Ç–æ —Ç—ã —ç—Ç–æ —Ç—ã.\n\n–ï—Å–ª–∏ –±—É–¥—É—Ç –∫–∞–∫–∏–µ-—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã, —Ç–æ –ø–∏—à–∏ @appxpy",
            parse_mode="HTML",
        )
        await AuthForm.password.set()
    else:
        await menu(message, state)


async def auth(message: types.Message, state: FSMContext):
    if message.text.lower() == "–ë–ú–í–ú4":
        await message.answer("–ü–∞—Ä–æ–ª—å –≤–µ—Ä–Ω—ã–π!")
        await u.create_user(
            message.from_user.id,
            message.from_user.full_name,
            message.from_user.username,
        )
        await menu(message, state)
    else:
        await message.answer("–ü–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.")
        await AuthForm.password.set()
    await message.delete()
